version: 2
orbs:
  shellcheck: circleci/shellcheck@1.3.16
jobs:
  test:
    docker:
      - image: circleci/node:14.14.0
    working_directory: ~/repo

    steps:
      - setup_remote_docker
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.27.4/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install Dependencies
          command: npm i
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Run unit tests
          command: npm test
  deploy:
    docker:
      - image: circleci/node:14.14.0
    working_directory: ~/repo
    steps:
      - setup_remote_docker
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.28.4/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - checkout
      - run:
          name: Push to docker hub
          command: |
            PROJECT_NAME=$(node -p -e "require('./package.json').name")
            DOCKER_REPOSITORY=${DOCKER_HUB_ID}/${PROJECT_NAME}
            if [[ ${CIRCLE_BRANCH} == "master" ]]; then
                docker-compose build
                docker login -u $DOCKER_HUB_ID -p $DOCKER_HUB_PWD
                docker tag ${PROJECT_NAME} ${DOCKER_REPOSITORY}
                docker push ${DOCKER_REPOSITORY}
            fi
      - add_ssh_keys
      - run:
          name: Add ssh key to know hosts
          command: ssh-keyscan -H 51.77.220.169 >> ~/.ssh/known_hosts
      - run:
          name: Connect to vps
          command: |
            ssh debian@51.77.220.169 <<'ENDSSH'
            cd starter
            git pull origin master
            docker-compose build server
            docker-compose restart server
            ENDSSH



workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test

